# Generated by Django 4.2.6 on 2023-10-15 06:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='area_participante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField()),
                ('porcentaje', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='areas_y_trabajdores_para_la_ficha_tecnica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_area_participante', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.area_participante')),
            ],
        ),
        migrations.CreateModel(
            name='categoria_del_profesor_del_servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_categoria', models.TextField()),
                ('tarifa_por_hora', models.FloatField()),
                ('total_de_horas', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='consideraciones_para_la_ficha_tecnica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='contrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=5)),
                ('CES', models.TextField()),
                ('titulo', models.TextField()),
                ('numero', models.TextField()),
                ('grupo_ejecutor_del_contrato', models.TextField()),
                ('cliente', models.TextField()),
                ('gestor', models.TextField()),
                ('producto', models.TextField()),
                ('codigo', models.TextField()),
                ('localizacion_del_cliente', models.TextField()),
                ('coordinador_del_contrato', models.TextField()),
                ('cantidad_de_participantes', models.IntegerField()),
                ('fecha_de_inicio', models.DateField()),
                ('terminacion', models.DateField()),
                ('valor_del_contrato', models.FloatField()),
                ('margen_comercial', models.FloatField()),
                ('ingreso_bruto', models.FloatField()),
                ('observaciones', models.TextField()),
                ('gastos_de_operacion_desde_CETA', models.FloatField()),
                ('ingreso_neto_planificado', models.FloatField()),
                ('remuneracion', models.FloatField()),
                ('norma_maxima', models.FloatField()),
                ('norma_asignada', models.FloatField()),
                ('propuesto_por', models.TextField()),
                ('aprobado_por', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='control_de_documentos_del_contrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_del_documento', models.TextField()),
                ('fecha_de_entrega', models.DateField()),
                ('responsable', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='cronograma_para_ficha_tecnica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_de_la_tarea', models.IntegerField()),
                ('nombre_completo_de_la_tarea', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='encuetros_por_semana',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField()),
                ('semana', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='facturacion_pagos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('valor', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='norma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.TextField()),
                ('cantidad', models.FloatField()),
                ('tipo', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='pagos_al_cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('valor', models.FloatField()),
                ('detalles', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='plazo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_plazo', models.TextField()),
                ('remuneracion', models.FloatField()),
                ('cumplimiento_de_normas', models.BooleanField()),
                ('total_asignado', models.FloatField()),
                ('porcentaje', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='productos_necesarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.TextField()),
                ('descripcion', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='programa_de_cobro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_programa', models.TextField()),
                ('fecha', models.DateField()),
                ('plan_MN', models.FloatField()),
                ('plan_USD', models.FloatField()),
                ('remuneracion', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='recursos_necesarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.TextField()),
                ('descripcion', models.TextField()),
                ('cantidad', models.IntegerField()),
                ('caracteristicas_especiales', models.TextField()),
                ('justificacion', models.TextField()),
                ('valor_unitario', models.FloatField()),
                ('total', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='resultados_obtenidos_para_ficha_tecnica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_producto_obtenido', models.TextField()),
                ('descripcion_producto_obtenido', models.TextField()),
                ('tipo_de_registro', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='resultados_para_ficha_tecnica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_de_la_tarea', models.IntegerField()),
                ('nombre_completo_de_la_tarea', models.TextField()),
                ('descripcion_del_tipo_de_entregable', models.TextField()),
                ('formato_del_entregable', models.TextField()),
                ('fecha_escrita_de_entrega_de_entregable', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_rol', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='tareas_detalladas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='valor_del_contrato_por_los_servicios_comercializados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.FloatField()),
                ('moneda', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.TextField()),
                ('nombre_usuario', models.CharField(max_length=20)),
                ('contrasena', models.CharField(max_length=255)),
                ('id_rol', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.rol')),
            ],
        ),
        migrations.CreateModel(
            name='trabajador',
            fields=[
                ('id_trabajador', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('nombre', models.TextField()),
                ('id_categoria_del_profesor_del_servicio', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.categoria_del_profesor_del_servicio')),
                ('lista_plazo', models.ManyToManyField(to='api.plazo')),
            ],
        ),
        migrations.CreateModel(
            name='tiempo_dedicado_en_horas_mensuales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horas_dedicadas', models.IntegerField()),
                ('id_resultados_obtenidos_para_ficha_tecnica', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.resultados_obtenidos_para_ficha_tecnica')),
            ],
        ),
        migrations.CreateModel(
            name='servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_servicio', models.TextField()),
                ('capacidad_de_matricula', models.IntegerField()),
                ('lista_categorias', models.ManyToManyField(to='api.categoria_del_profesor_del_servicio')),
            ],
        ),
        migrations.CreateModel(
            name='registros_de_derechos_y_propiedad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porcentaje_de_la_cujae', models.FloatField()),
                ('porcentaje_del_cliente', models.FloatField()),
                ('tipo_de_registro', models.TextField()),
                ('id_resultados_obtenidos_para_ficha_tecnica', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.resultados_obtenidos_para_ficha_tecnica')),
            ],
        ),
        migrations.CreateModel(
            name='planificacion_de_gastos_personales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ejecucion_fuera_de_provincia', models.BooleanField()),
                ('lista_trabajador', models.ManyToManyField(to='api.trabajador')),
            ],
        ),
        migrations.CreateModel(
            name='ficha_tecnica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
                ('fecha', models.DateField()),
                ('cliente', models.TextField()),
                ('objeto', models.TextField()),
                ('vigencia', models.TextField()),
                ('objetivos_especificos', models.TextField()),
                ('informacion_a_entregar_por_el_cliente', models.TextField()),
                ('id_area_ejecutora_principal', models.TextField()),
                ('coordinador_del_contrato_por_la_cujae', models.TextField()),
                ('cargo_del_cliente', models.TextField()),
                ('firmado_por_responsable_del_contrato_de_ceta', models.TextField()),
                ('id_cronograma', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.cronograma_para_ficha_tecnica')),
                ('id_valor_del_contrato_por_los_servicios_comercializados', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.valor_del_contrato_por_los_servicios_comercializados')),
                ('lista_area_participante', models.ManyToManyField(to='api.area_participante')),
                ('lista_areas_y_trabajdores_para_la_ficha_tecnica', models.ManyToManyField(to='api.areas_y_trabajdores_para_la_ficha_tecnica')),
                ('lista_consideraciones_para_la_ficha_tecnica', models.ManyToManyField(to='api.consideraciones_para_la_ficha_tecnica')),
                ('lista_control_de_documentos_del_contrato', models.ManyToManyField(to='api.control_de_documentos_del_contrato')),
                ('lista_de_productos_extras_para_el_contrato', models.ManyToManyField(to='api.productos_necesarios')),
                ('lista_facturacion_pagos', models.ManyToManyField(to='api.facturacion_pagos')),
                ('lista_pagos_al_cliente', models.ManyToManyField(to='api.pagos_al_cliente')),
                ('lista_recurso_necesarios', models.ManyToManyField(to='api.recursos_necesarios')),
                ('lista_registros_de_derechos_y_propiedad', models.ManyToManyField(to='api.registros_de_derechos_y_propiedad')),
                ('lista_resultados_de_tareas', models.ManyToManyField(to='api.resultados_para_ficha_tecnica')),
                ('lista_resultados_obtenidos_para_ficha_tecnica', models.ManyToManyField(to='api.resultados_obtenidos_para_ficha_tecnica')),
                ('lista_tareas_detalladas', models.ManyToManyField(to='api.tareas_detalladas')),
                ('lista_tiempo_dedicado_en_horas_mensuales', models.ManyToManyField(to='api.tiempo_dedicado_en_horas_mensuales')),
            ],
        ),
        migrations.AddField(
            model_name='facturacion_pagos',
            name='id_resultados_obtenidos_para_ficha_tecnica',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.resultados_obtenidos_para_ficha_tecnica'),
        ),
        migrations.CreateModel(
            name='empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_empresa', models.TextField()),
                ('lista_de_contrato', models.ManyToManyField(to='api.contrato')),
                ('lista_de_seguridad', models.ManyToManyField(to='api.usuario')),
            ],
        ),
        migrations.AddField(
            model_name='cronograma_para_ficha_tecnica',
            name='lista_encuetros_por_semana',
            field=models.ManyToManyField(to='api.encuetros_por_semana'),
        ),
        migrations.AddField(
            model_name='contrato',
            name='id_servicio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.servicio'),
        ),
        migrations.AddField(
            model_name='contrato',
            name='lista_area_participante',
            field=models.ManyToManyField(to='api.area_participante'),
        ),
        migrations.AddField(
            model_name='contrato',
            name='lista_programa_de_cobro',
            field=models.ManyToManyField(to='api.programa_de_cobro'),
        ),
        migrations.AddField(
            model_name='areas_y_trabajdores_para_la_ficha_tecnica',
            name='id_trabajador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.trabajador'),
        ),
        migrations.AddField(
            model_name='area_participante',
            name='lista_trabajador',
            field=models.ManyToManyField(to='api.trabajador'),
        ),
    ]
